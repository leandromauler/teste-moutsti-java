spring.application.name=orders-api

## SPRINGDOC OPENAPI
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/api-docs.html
springdoc.packages-to-scan=br.com.leandroauler.orders.api.controller

## DATABASE CONFIGURATION
spring.datasource.url=jdbc:postgresql://localhost:5432/orders-api
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

## JPA CONFIGURATION
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

## RABBITMQ CONFIGURATION
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=rabbitmq
spring.rabbitmq.password=rabbitmq
rabbitmq.exchange.name=orders.v1.order-created

# Configurações do Redis
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password= # Se o Redis estiver sem senha, deixe em branco ou remova esta linha
spring.redis.timeout=60000 # Tempo limite da conexão em milissegundos

# Configurações do Cache com Redis
spring.cache.type=redis
spring.cache.redis.time-to-live=600000 # Tempo de vida do cache em milissegundos (10 minutos)
spring.cache.redis.cache-null-values=false # Não armazena valores nulos no cache
spring.cache.redis.key-prefix=productCache:: # Prefixo para as chaves de cache
spring.cache.redis.use-key-prefix=true # Habilita o uso de prefixo para as chaves
